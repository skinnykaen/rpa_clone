type CourseHttp {
	id: String!
	blocks_url: String!
	effort: String!
	enrollment_start: Timestamp!
	enrollment_end: Timestamp!
	end: Timestamp!
	name: String!
	number: String!
	org: String!
	short_description: String!
	start: Timestamp!
	start_display: String!
	start_type: String!
	pacing: String!
	mobile_available: Boolean!
	hidden: Boolean!
	invitation_only: Boolean!
	overview: String
	course_id: String!
	media: CourseAPIMediaCollectionHttp!
}

type CourseAPIMediaCollectionHttp {
	id: String!
	banner_image: AbsoluteMediaHttp
	course_image: MediaHttp
	course_video: MediaHttp
	image: ImageHttp
}

type AbsoluteMediaHttp {
	id: String!
	uri: String!
	uri_absolute: String!
}

type ImageHttp {
	id: String!
	raw: String!
	small: String!
	large: String!
}

type MediaHttp {
	id: String!
	uri: String!
}

type Pagination {
	next: String!
	previous: String!
	count: Int!
	num_pages: Int!
}

type CoursesListHttp {
	results:    [CourseHttp!]!
	pagination: Pagination!
	countRows: Int!
}

extend type Query {
	GetCourseById(id: String!): CourseHttp! @hasRole(roles: [SuperAdmin, UnitAdmin, Teacher, Student])
	GetCoursesByUser: CoursesListHttp! @hasRole(roles: [SuperAdmin, UnitAdmin, Teacher, Student])
}